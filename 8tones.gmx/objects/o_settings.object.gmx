<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///init
alpha = 0;
done = 0;
clicked = 0;
x1 = -room_width;
x2 = -room_width;
switch_x[0] = -2;
switch_x[1] = -2;
switch_x[2] = -2;
ACCENT = 0;
get_user2 = 0;

ios_bg = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///entrance animation
if (x1 &lt; 0) &amp;&amp; (done == 0)
{
    x1 += max(abs(-x1)*0.2,1);
}
if (x2 &lt; 0) &amp;&amp; (done == 0)
{
    x2 += max(abs(-x2)*0.1,1);
}
if (alpha &lt; 1) &amp;&amp; (done == 0)
{
    alpha += 0.05;
}

if (alpha &gt;= 1) &amp;&amp; (x1 &gt;= 0) &amp;&amp; (x2 &gt;= 0) &amp;&amp; (done == 0)
{
    done = 1;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///click thingy
if (done == 1) &amp;&amp; (device_mouse_check_button(0,mb_left)) &amp;&amp; (clicked &lt;&gt; 88)
{
    //set accent color
    if (device_mouse_x(0) &gt; 156)
    &amp;&amp; (device_mouse_y(0) &gt; 72)
    &amp;&amp; (device_mouse_x(0) &lt; 240)
    &amp;&amp; (device_mouse_y(0) &lt; 114)
    {
        //set accent color
        clicked = 1;
    }
    
    //set background color
    if (device_mouse_x(0) &gt; 192)
    &amp;&amp; (device_mouse_y(0) &gt; 132)
    &amp;&amp; (device_mouse_x(0) &lt; 240)
    &amp;&amp; (device_mouse_y(0) &lt; 174)
    {
        //set background color
        clicked = 2;
    }
    
    //set auto preview
    if (device_mouse_x(0) &gt; 192)
    &amp;&amp; (device_mouse_y(0) &gt; 192)
    &amp;&amp; (device_mouse_x(0) &lt; 240)
    &amp;&amp; (device_mouse_y(0) &lt; 224)
    {
        //set auto preview
        clicked = 3;
    }
    
    //reverse octave/pitch position
    if (device_mouse_x(0) &gt; 192)
    &amp;&amp; (device_mouse_y(0) &gt; 282)
    &amp;&amp; (device_mouse_x(0) &lt; 240)
    &amp;&amp; (device_mouse_y(0) &lt; 314)
    {
        //reverse ready
        clicked = 4;
    }
    
    //change username
    if (device_mouse_x(0) &gt; 156)
    &amp;&amp; (device_mouse_y(0) &gt; 362)
    &amp;&amp; (device_mouse_x(0) &lt; 240)
    &amp;&amp; (device_mouse_y(0) &lt; 386)
    {
        //change username
        clicked = 5;
    }
    
    //back button
    if (device_mouse_x(0) &gt; room_width-48)
    &amp;&amp; (device_mouse_y(0) &lt; 56)
    {
        clicked = -1;
    }
}

//released
if (done == 1) &amp;&amp; (device_mouse_check_button_released(0,mb_left))
{
    //set accent color
    if (device_mouse_x(0) &gt; 156)
    &amp;&amp; (device_mouse_y(0) &gt; 72)
    &amp;&amp; (device_mouse_x(0) &lt; 240)
    &amp;&amp; (device_mouse_y(0) &lt; 114)
    &amp;&amp; (clicked == 1)
    {
        //set accent color
        done = 2;
        ACCENT = 1;
    }
    //set background color
    if (device_mouse_x(0) &gt; 192)
    &amp;&amp; (device_mouse_y(0) &gt; 132)
    &amp;&amp; (device_mouse_x(0) &lt; 240)
    &amp;&amp; (device_mouse_y(0) &lt; 174)
    &amp;&amp; (clicked == 2)
    {
        //set background color
        if (global.background == 0)
        {
            global.background = 1;
        }
        else
        {
            global.background = 0;
        }
        with (o_SYSTEM) event_user(0);
    }
    
    //set auto preview
    if (device_mouse_x(0) &gt; 192)
    &amp;&amp; (device_mouse_y(0) &gt; 192)
    &amp;&amp; (device_mouse_x(0) &lt; 240)
    &amp;&amp; (device_mouse_y(0) &lt; 224)
    &amp;&amp; (clicked == 3)
    {
        //set auto preview
        if (global.preview == 0)
        {
            global.preview = 1;
        }
        else
        {
            global.preview = 0;
        }
    }
    
    //set reverse octave/pitch position
    if (device_mouse_x(0) &gt; 192)
    &amp;&amp; (device_mouse_y(0) &gt; 282)
    &amp;&amp; (device_mouse_x(0) &lt; 240)
    &amp;&amp; (device_mouse_y(0) &lt; 314)
    &amp;&amp; (clicked == 4)
    {
        //reverse
        if (global.reverse_PS == 0)
        {
            global.reverse_PS = 1;
        }
        else
        {
            global.reverse_PS = 0;
        }
    }
    
    //change username
    if (device_mouse_x(0) &gt; 156)
    &amp;&amp; (device_mouse_y(0) &gt; 362)
    &amp;&amp; (device_mouse_x(0) &lt; 240)
    &amp;&amp; (device_mouse_y(0) &lt; 386)
    &amp;&amp; (clicked == 5)
    {
        //change username
        clicked = 88;
        ios_bg = 1;
        get_user2 = get_string_async('What is your name or username? (a-z 0-9 ONLY!)',global.username);
    }
    
    //BACK
    if (device_mouse_x(0) &gt; room_width-48)
    &amp;&amp; (device_mouse_y(0) &lt; 56)
    &amp;&amp; (clicked == -1)
    {
        done = 2;
    }
    if (clicked &lt;&gt; 88)
    {
        clicked = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///switch animation thingy

//background color switch
if (global.background == 1)
{
    if (switch_x[0] &lt; 26)
    {
        switch_x[0] += 7;
    }
    if (switch_x[0] &gt; 26)
    {
        switch_x[0] = 26;
    }
}
if (global.background == 0)
{
    if (switch_x[0] &gt; -2)
    {
        switch_x[0] -= 7;
    }
    if (switch_x[0] &lt; -2)
    {
        switch_x[0] = -2;
    }
}

//auto preview switch
if (global.preview == 1)
{
    if (switch_x[1] &lt; 26)
    {
        switch_x[1] += 7;
    }
    if (switch_x[1] &gt; 26)
    {
        switch_x[1] = 26;
    }
}
if (global.preview == 0)
{
    if (switch_x[1] &gt; -2)
    {
        switch_x[1] -= 7;
    }
    if (switch_x[1] &lt; -2)
    {
        switch_x[1] = -2;
    }
}

//reverse oct/pit switch
if (global.reverse_PS == 1)
{
    if (switch_x[2] &lt; 26)
    {
        switch_x[2] += 7;
    }
    if (switch_x[2] &gt; 26)
    {
        switch_x[2] = 26;
    }
}
if (global.reverse_PS == 0)
{
    if (switch_x[2] &gt; -2)
    {
        switch_x[2] -= 7;
    }
    if (switch_x[2] &lt; -2)
    {
        switch_x[2] = -2;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///exit animation
if (x1 &lt; room_width) &amp;&amp; (done == 2)
{
    x1 += max((room_width-x1)*0.1,2);
}
if (x2 &lt; room_width) &amp;&amp; (done == 2)
{
    x2 += max((room_width-x2)*0.2,2);
}
if (alpha &gt; 0) &amp;&amp; (done == 2)
{
    alpha -= 0.05;
}

if (alpha &lt;= 0) &amp;&amp; (x1 &gt;= room_width) &amp;&amp; (x2 &gt;= room_width) &amp;&amp; (done == 2)
{
    alpha = 0;
    x1 = room_width;
    x2 = room_width;
    done = 3;
    event_user(0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="63">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///LOGIN DIALOG
var grab;
grab = ds_map_find_value(async_load,"id");
if (grab == get_user2)
{
    if (ds_map_find_value(async_load,"status"))
    {
        if ds_map_find_value(async_load,"result") != ''
        {
            var temp_name;
            temp_name = string_lettersdigits(ds_map_find_value(async_load,"result"));
            if (temp_name == '')
            {
                get_user2 = get_string_async('What is your name or username? (a-z 0-9 ONLY!)',global.username);
            }
            else
            {
                global.username = temp_name;
                clicked = 0;
                if (os_type == os_ios)
                {
                    ios_bg = 0;
                    keyboard_close();
                }
            }
        }
        else
        {
            get_user2 = get_string_async('What is your name or username? (a-z 0-9 ONLY!)',global.username);
        }
    }
    else
    {
        clicked = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///determine if this is from the editor
if (global.editor_setting == 0) &amp;&amp; (ACCENT == 0)
{
    room_goto(rm_title);
}
else if (global.editor_setting &lt;&gt; 0) &amp;&amp; (ACCENT == 0)
{
    global.editor_setting = 0;
    room_goto(rm_maker);
}
else if (ACCENT &lt;&gt; 0)
{
    room_goto(rm_accent);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///render settings thingy
draw_set_color(global.text_white);
draw_set_font(ft_gb_xxl);
draw_set_alpha(alpha);
draw_text(8+x1,16,"SETTINGS");

//accent color option
draw_set_font(ft_gb_xs);
draw_set_color(global.text_disabled);
draw_text(8+x2,64,"Accent color");
draw_set_color(global.accent_color[global.accent]);
draw_set_font(ft_gb);
var _accent;
_accent =  get_accent(global.accent);
draw_text(8+x2,80,_accent);
if (clicked == 1)
{
    draw_set_color(global.accent_color[global.accent]);
    draw_rectangle(164+x2,80,232+x2,96,0);
}
draw_set_color(global.text_white);
draw_rectangle(164+x2,80,232+x2,96,1);
draw_rectangle(165+x2,81,231+x2,95,1);
draw_set_font(ft_gb_xs);
draw_set_color(global.text_white);
draw_text(176+x2,83,"Change");

//background option
draw_set_font(ft_gb_xs);
draw_set_color(global.text_disabled);
draw_text(8+x2,124,"Background");
draw_set_color(global.text_white);
draw_set_font(ft_gb);
if (global.background == 0)
{
    draw_text(8+x2,140,"Dark");
    draw_sprite(s_slider_white,0,200+x2,140);
    draw_set_color(global.accent_color[global.accent]);
    draw_rectangle(204+x2,144,204+x2+switch_x[0],151,0);
    draw_sprite(s_slider_white,1,200+x2+switch_x[0],140);
}
else
{
    draw_text(8+x2,140,"Light");
    draw_sprite(s_slider_black,0,200+x2,140);
    draw_set_color(global.accent_color[global.accent]);
    draw_rectangle(204+x2,144,204+x2+switch_x[0],151,0);
    draw_sprite(s_slider_black,1,200+x2+switch_x[0],140);
}

//Audio preview
draw_set_font(ft_gb_xs);
draw_set_color(global.text_disabled);
draw_text(8+x2,184,"Automatic preview");
draw_set_color(global.text_white);
draw_set_font(ft_gb);
var _result_p;
switch (global.preview)
{
    case(0): _result_p = "Manual"; break;
    case(1): _result_p = "Automatic"; break;
    default: _result_p = "Manual"; break;
}
if (global.background == 0)
{
    draw_text(8+x2,200,_result_p);
    draw_sprite(s_slider_white,0,200+x2,200);
    draw_set_color(global.accent_color[global.accent]);
    draw_rectangle(204+x2,204,204+x2+switch_x[1],211,0);
    draw_sprite(s_slider_white,1,200+x2+switch_x[1],200);
}
else
{
    draw_text(8+x2,200,_result_p);
    draw_sprite(s_slider_black,0,200+x2,200);
    draw_set_color(global.accent_color[global.accent]);
    draw_rectangle(204+x2,204,204+x2+switch_x[1],211,0);
    draw_sprite(s_slider_black,1,200+x2+switch_x[1],200);
}
draw_set_font(ft_gb_xs);
draw_set_color(global.text_disabled);
draw_text(8+x2,220,"Automatic preview allows you to #preview (play) the current#note you just modified.");

//Reverse Octave/pitch
draw_set_font(ft_gb_xs);
draw_set_color(global.text_disabled);
draw_text(8+x2,274,"Reverse Octave/Pitch");
draw_set_color(global.text_white);
draw_set_font(ft_gb);
var _result_p;
switch (global.reverse_PS)
{
    case(0): _result_p = "Off"; break;
    case(1): _result_p = "On"; break;
    default: _result_p = "WTF"; break;
}
if (global.background == 0)
{
    draw_text(8+x2,290,_result_p);
    draw_sprite(s_slider_white,0,200+x2,290);
    draw_set_color(global.accent_color[global.accent]);
    draw_rectangle(204+x2,294,204+x2+switch_x[2],301,0);
    draw_sprite(s_slider_white,1,200+x2+switch_x[2],290);
}
else
{
    draw_text(8+x2,290,_result_p);
    draw_sprite(s_slider_black,0,200+x2,290);
    draw_set_color(global.accent_color[global.accent]);
    draw_rectangle(204+x2,294,204+x2+switch_x[2],301,0);
    draw_sprite(s_slider_black,1,200+x2+switch_x[2],290);
}
draw_set_font(ft_gb_xs);
draw_set_color(global.text_disabled);
draw_text(8+x2,310,"Reverse the octave/pitch #position in the editor.");

//Change username
draw_set_font(ft_gb_xs);
draw_set_color(global.text_disabled);
draw_text(8+x2,350,"Username");
draw_set_color(global.text_white);
draw_set_font(ft_gb);
draw_text(8+x2,366,global.username);
if (clicked == 5)
{
    draw_set_color(global.accent_color[global.accent]);
    draw_rectangle(164+x2,366,232+x2,382,0);
}
draw_set_color(global.text_white);
draw_rectangle(164+x2,366,232+x2,382,1);
draw_rectangle(165+x2,367,231+x2,381,1);
draw_set_font(ft_gb_xs);
draw_set_color(global.text_white);
draw_text(176+x2,369,"Change");



draw_set_color(global.text_white);
draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///render back button
//highlight
draw_set_color(global.accent_color[global.accent]);
if (clicked == -1)
{
    draw_circle(room_width-24,32,15,0);
}
//button
draw_sprite_ext(s_back,global.background,room_width-40+x1,16,1,1,0,$FFFFFF,alpha);


///fader
if (clicked == 88)
{
    draw_set_alpha(0.5);
    draw_set_color($000000);
    draw_rectangle(0,0,room_width,room_height,0)
    draw_set_alpha(1);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///ios fader
if (ios_bg &lt;&gt; 0)
{
    draw_set_color(make_color_hsv(0,0,global.background*255));
    draw_set_alpha(0.7);
    draw_rectangle(-8,-8,room_width+8,room_height+8,0);
    draw_set_alpha(1);
    draw_set_color(global.text_white);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///back button exit this screen
if (clicked == 0)
{
    done = 2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
