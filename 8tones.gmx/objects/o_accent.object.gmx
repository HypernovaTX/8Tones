<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///init
alpha = 0;
alpha2 = 0;
done = 0;
clicked = 0;
x1 = -room_width;
fan = 0;
//accent = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///entrance animation
if (x1 &lt; 0) &amp;&amp; (done == 0)
{
    x1 += max(abs(-x1)*0.2,1);
}
if (alpha &lt; 1) &amp;&amp; (done == 0)
{
    alpha += 0.05;
}
if (alpha2 &lt; 1) &amp;&amp; (done == 0)
{
    alpha2 += 0.2;
}

if (fan &lt; 10) &amp;&amp; (done == 0)
{
    fan += 2;
}

if (alpha &gt;= 1) &amp;&amp; (x1 &gt;= 0) &amp;&amp; (done == 0) &amp;&amp; (fan &gt;= 10)
{
    alpha = 1;
    alpha2 = 1;
    fan = 10;
    done = 1;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///click thingy
if (done == 1) &amp;&amp; (device_mouse_check_button_pressed(0,mb_left))
{
    //set accent color
    if (device_mouse_x(0) &gt; 4)
    &amp;&amp; (device_mouse_y(0) &gt; 36)
    &amp;&amp; (device_mouse_x(0) &lt; room_height-4)
    &amp;&amp; (device_mouse_y(0) &lt; 384)
    {
        //set accent color
        var _get_x, _get_y;
        _get_x = (device_mouse_x(0)-4) div 58;
        _get_y = (device_mouse_y(0)-36) div 58;
        global.accent = _get_x+(_get_y*4);
        done = 2;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///exit animation
if (x1 &lt; room_width) &amp;&amp; (done == 2)
{
    x1 += max((room_width-x1)*0.1,2);
}
if (alpha &gt; 0) &amp;&amp; (done == 2)
{
    alpha -= 0.05;
}

if (alpha2 &gt; 0) &amp;&amp; (done == 2)
{
    alpha2 -= 0.2;
}

if (fan &gt; 0) &amp;&amp; (done == 2)
{
    fan -= 2;
}

if (fan &lt; 0) &amp;&amp; (done == 2)
{
    fan = 0;
}

if (alpha &lt;= 0) &amp;&amp; (x1 &gt;= room_width) &amp;&amp; (fan &lt;= 0) &amp;&amp; (done == 2)
{
    alpha = 0;
    alpha2 = 0;
    x1 = room_width;
    done = 3;
    fan = 0;
    room_goto(rm_settings);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///render settings thingy
draw_set_color(global.text_white);
draw_set_font(ft_gb);
draw_set_alpha(alpha);
draw_text(8+x1,16,"Accent Colors");

//draw_text(0,0,accent);

//accent color option
var _aa;
for (_aa = 0; _aa &lt;= 3; _aa += 1)
{
    draw_set_alpha(alpha2);

    draw_set_color(global.accent_color[_aa]);
    draw_rectangle(8+(_aa*58),40,58+(_aa*58),40+(fan*5),0);
    
    draw_set_color(global.accent_color[_aa+4]);
    draw_rectangle(8+(_aa*58),98,58+(_aa*58),98+(fan*5),0);
    
    draw_set_color(global.accent_color[_aa+8]);
    draw_rectangle(8+(_aa*58),156,58+(_aa*58),156+(fan*5),0);
    
    draw_set_color(global.accent_color[_aa+12]);
    draw_rectangle(8+(_aa*58),214,58+(_aa*58),214+(fan*5),0);
    
    draw_set_color(global.accent_color[_aa+16]);
    draw_rectangle(8+(_aa*58),272,58+(_aa*58),272+(fan*5),0);
    
    draw_set_color(global.accent_color[_aa+20]);
    draw_rectangle(8+(_aa*58),330,58+(_aa*58),330+(fan*5),0);
}

draw_set_color(global.text_white);
draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///back button exit this screen
if (clicked == 0)
{
    done = 2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
