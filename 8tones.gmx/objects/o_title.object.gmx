<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///init
canclick = 0;
clicked = 0;
action = 0;
LOGIN = 0;
PAY = 0;
pay_win_height = 56;
pay_win = -(pay_win_height*2);
pay_click = 0;
shade_alpha = 0;
get_user = 0;
entries = 5;
entry[0] = "Create";
entry[1] = "Listen";
entry[2] = "Settings";
entry[3] = "Help";
entry[4] = "About";
entry[5] = "Rate";
if (os_type &lt;&gt; os_ios)
{
    entries = 6;
    entry[6] = "Quit";
}

alpha = 0;
alpha2 = 0;

//init entry positions
var _ii;
for (_ii = 0; _ii &lt;= entries; _ii += 1)
{
    entry_x[_ii] = -(room_width*0.5);
    entry_go[_ii] = 0;
}

entry_go[0] = 1;
alarm[0] = 4;
alarm_entry_ps = 0;
ios_bg = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///login if no username
if (global.username == '')
{
    ios_bg = 1;
    get_user = get_string_async('What is your name or username? (a-z 0-9 ONLY!)','anonymous');
    LOGIN = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///delayed room restart trigger
room_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///menu show up move thingy trigger
if (alarm_entry_ps &lt; entries)
{
    alarm_entry_ps += 1;
    entry_go[alarm_entry_ps] = 1;
    alarm[0] = 4;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///entry movement
var _ii;
for (_ii = 0; _ii &lt;= entries; _ii += 1)
{
    if (entry_go[_ii] == 1) &amp;&amp; (canclick == 0)
    {
        entry_x[_ii] += max(((room_width*0.5)-entry_x[_ii])*0.1,1);
        if (entry_x[_ii] &gt;= room_width*0.5)
        {
            entry_go[_ii] = 2;
        }
    }
}

if (alpha &lt; 1) &amp;&amp; (canclick == 0)
{
    alpha += 0.05;
}

if (alpha2 &lt; 1) &amp;&amp; (canclick == 0)
{
    alpha2 += 0.02;
}

if (entry_go[entries] == 2) &amp;&amp; (alpha &gt;= 1) &amp;&amp; (alpha2 &gt;= 1) &amp;&amp; (canclick == 0)
{
    canclick = 1;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///menu selection thingy
if (device_mouse_check_button(0,mb_left)) &amp;&amp; (canclick == 1) &amp;&amp; (LOGIN == 0) &amp;&amp; (PAY == 0)
{
    if (device_mouse_x(0) &gt; 0)
    &amp;&amp; (device_mouse_x(0) &lt; room_width)
    {
        if (device_mouse_y(0) &gt; 96+24)
        &amp;&amp; (device_mouse_y(0) &lt; 96+24+(1*32))
        {
            clicked = 1;
        }
        else if (device_mouse_y(0) &gt;= 96+24+(1*32))
        &amp;&amp; (device_mouse_y(0) &lt; 96+24+(2*32))
        {
            clicked = 2;
        }
        else if (device_mouse_y(0) &gt;= 96+24+(2*32))
        &amp;&amp; (device_mouse_y(0) &lt; 96+24+(3*32))
        {
            clicked = 3;
        }
        else if (device_mouse_y(0) &gt;= 96+24+(3*32))
        &amp;&amp; (device_mouse_y(0) &lt; 96+24+(4*32))
        {
            clicked = 4;
        }
        else if (device_mouse_y(0) &gt;= 96+24+(4*32))
        &amp;&amp; (device_mouse_y(0) &lt; 96+24+(5*32))
        {
            clicked = 5;
        }
        else if (device_mouse_y(0) &gt;= 96+24+(5*32))
        &amp;&amp; (device_mouse_y(0) &lt; 96+24+(6*32))
        {
            clicked = 6;
        }
        else if (device_mouse_y(0) &gt;= 96+24+(6*32))
        &amp;&amp; (device_mouse_y(0) &lt; 96+24+(7*32))
        &amp;&amp; (os_type &lt;&gt; os_ios)
        {
            clicked = 7;
        }
        ///IAP Button
        else if (device_mouse_y(0) &gt;= room_height-48)
        &amp;&amp; (device_mouse_y(0) &lt;= room_height-24)
        &amp;&amp; (device_mouse_x(0) &gt;= (room_width*0.5)-72)
        &amp;&amp; (device_mouse_x(0) &lt;= (room_width*0.5)+72)
        &amp;&amp; (global.online == 0)
        {
            clicked = 8;
        }
        ///IAP restore Button (iOS ONLY!)
        else if (device_mouse_y(0) &gt;= room_height-80)
        &amp;&amp; (device_mouse_y(0) &lt;= room_height-56)
        &amp;&amp; (device_mouse_x(0) &gt;= (room_width*0.5)-72)
        &amp;&amp; (device_mouse_x(0) &lt;= (room_width*0.5)+72)
        &amp;&amp; (global.online == 0)
        &amp;&amp; (os_type == os_ios)
        {
            clicked = 9;
        }
        else
        {
            clicked = 0;
        }
    }
}

if (device_mouse_check_button_released(0,mb_left))
{
    if (device_mouse_x(0) &gt; 0)
    &amp;&amp; (device_mouse_x(0) &lt; room_width)
    {
        if (device_mouse_y(0) &gt; 96+24)
        &amp;&amp; (device_mouse_y(0) &lt; 96+24+(1*32))
        &amp;&amp; (clicked == 1)
        {
            //start load projects
            canclick = 2;
            action = 1;
        }
        else if (device_mouse_y(0) &gt;= 96+24+(1*32))
        &amp;&amp; (device_mouse_y(0) &lt; 96+24+(2*32))
        &amp;&amp; (clicked == 2)
        {
            //go to settings
            canclick = 2;
            action = 2;
        }
        else if (device_mouse_y(0) &gt;= 96+24+(2*32))
        &amp;&amp; (device_mouse_y(0) &lt; 96+24+(3*32))
        &amp;&amp; (clicked == 3)
        {
            //check out samples
            canclick = 2;
            action = 3;
        }
        else if (device_mouse_y(0) &gt;= 96+24+(3*32))
        &amp;&amp; (device_mouse_y(0) &lt; 96+24+(4*32))
        &amp;&amp; (clicked == 4)
        {
            //go to about
            canclick = 2;
            action = 4;
        }
        else if (device_mouse_y(0) &gt;= 96+24+(4*32))
        &amp;&amp; (device_mouse_y(0) &lt; 96+24+(5*32))
        &amp;&amp; (clicked == 5)
        {
            //rate this app
            canclick = 2;
            action = 5;
        }
        else if (device_mouse_y(0) &gt;= 96+24+(5*32))
        &amp;&amp; (device_mouse_y(0) &lt; 96+24+(6*32))
        &amp;&amp; (clicked == 6)
        {
            //more app from Guova Games
            canclick = 2;
            action = 6;
        }
        else if (device_mouse_y(0) &gt;= 96+24+(6*32))
        &amp;&amp; (device_mouse_y(0) &lt; 96+24+(7*32))
        &amp;&amp; (clicked == 7)
        &amp;&amp; (os_type &lt;&gt; os_ios)
        {
            //more app from Guova Games
            canclick = 2;
            action = 7;
        }
        ///IAP Button
        else if (device_mouse_y(0) &gt;= room_height-48)
        &amp;&amp; (device_mouse_y(0) &lt;= room_height-24)
        &amp;&amp; (device_mouse_x(0) &gt;= (room_width*0.5)-72)
        &amp;&amp; (device_mouse_x(0) &lt;= (room_width*0.5)+72)
        &amp;&amp; (clicked == 8)
        &amp;&amp; (global.online == 0)
        {
            PAY = 1;
        }
        ///IAP restore Button (iOS ONLY!)
        else if (device_mouse_y(0) &gt;= room_height-80)
        &amp;&amp; (device_mouse_y(0) &lt;= room_height-56)
        &amp;&amp; (device_mouse_x(0) &gt;= (room_width*0.5)-72)
        &amp;&amp; (device_mouse_x(0) &lt;= (room_width*0.5)+72)
        &amp;&amp; (clicked == 9)
        &amp;&amp; (global.online == 0)
        &amp;&amp; (os_type == os_ios)
        {
            iap_restore_all();
        }
        clicked = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///exit movement
var _ii;
for (_ii = 0; _ii &lt;= entries; _ii += 1)
{
    if (entry_go[_ii] == 2) &amp;&amp; (canclick == 2)
    {
        entry_x[_ii] += max((room_width*1.5-entry_x[_ii])*0.1,1);
        if (entry_x[_ii] &gt;= room_width*1.5)
        {
            entry_go[_ii] = 3;
            entry_x[_ii] = room_width*1.5;
        }
    }
}

if (alpha &gt; 0) &amp;&amp; (canclick == 2)
{
    alpha -= 0.05;
}

if (alpha2 &gt; 0) &amp;&amp; (canclick == 2)
{
    alpha2 -= 0.05;
}

if (entry_go[entries] == 3) &amp;&amp; (alpha &lt;= 0) &amp;&amp; (alpha2 &lt;= 0) &amp;&amp; (canclick == 2)
{
    canclick = 3;
    event_user(0);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///PAY WINDOWS IN/OUT
if (PAY == 1)
{
    pay_win += 8;
    if (pay_win &gt;= 0)
    {
        pay_win = 0;
        PAY = 2;
    }
    
}
if (PAY == 3)
{
    pay_win += 8;
    if (pay_win &gt;= pay_win_height*2)
    {
        pay_win = -(pay_win_height*2);
        PAY = 0;
    }
}
if (PAY &lt;&gt; 0)
{
    if (shade_alpha &lt; 1)
    {
        shade_alpha += 0.05;
    }
}
else
{
    if (shade_alpha &gt; 0)
    {
        shade_alpha -= 0.05;
    }
    if (shade_alpha &lt; 0)
    {
        shade_alpha = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="66">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///IAP event
if (iap_status() == iap_status_available)
{
    var pur_kind = ds_map_find_value(iap_data,"type");
    switch (pur_kind)
    {
        case (iap_ev_purchase):
        {
            //purchasing
            var map = ds_map_create();
            var purchase_id = ds_map_find_value(iap_data,"index");
            iap_purchase_details(purchase_id,map);
            if (ds_map_find_value(map,"status") == iap_purchased)
            {
                var product_id = ds_map_find_value(map,"product");
                ds_map_replace(global.purchaseMap,product_id,1);
                switch (product_id)
                {
                    case "unlock1":
                    case "ios8t_unlock1":
                    {
                        global.online = 1;
                        with (o_SYSTEM) event_user(1);
                        show_message('Congrats! You can now publish music to the store!!');
                        PAY = 3;
                        break;
                    }
                }
            }
            ds_map_destroy(map);
            break;
        }
        case (iap_ev_restore):
        {
            //restoring
            var map = ds_map_create();
            var purchase_id = ds_map_find_value(iap_data,"index");
            iap_purchase_details(purchase_id,map);
            if (ds_map_find_value(map,"status") == iap_purchased)
            {
                var product_id = ds_map_find_value(map,"product");
                ds_map_replace(global.purchaseMap,product_id,1);
                switch (product_id)
                {
                    case "ios8t_unlock1":
                    {
                        global.online = 1;
                        with (o_SYSTEM) event_user(1);
                        show_message('Congrats! You can now publish music to the store!!');
                        PAY = 3;
                        break;
                    }
                }
            }
            ds_map_destroy(map);
            break;
        }

    }
    
}
ds_map_secure_save(global.purchaseMap,"iap_data.json");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="63">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///LOGIN DIALOG
var grab;
grab = ds_map_find_value(async_load,"id");
if (grab == get_user)
{
    if (ds_map_find_value(async_load,"status"))
    {
        if ds_map_find_value(async_load,"result") != ''
        {
            global.username = string_lettersdigits(ds_map_find_value(async_load,"result"));
            if (global.username == '')
            {
                get_user = get_string_async('What is your name or username? (a-z 0-9 ONLY!)','anonymous');
            }
            else
            {
                LOGIN = 0;
                if (os_type == os_ios)
                {
                    ios_bg = 0;
                    keyboard_close();
                }
            }
        }
        else
        {
            get_user = get_string_async('What is your name or username? (a-z 0-9 ONLY!)','anonymous');
        }
    }
    else
    {
        get_user = get_string_async('What is your name or username? (a-z 0-9 ONLY!)','anonymous');
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Acquire publisher IAP
if (iap_status() == iap_status_available) &amp;&amp; (os_type &lt;&gt; os_windows)
{
    var product = "";
    if (os_type == os_android)
    {
        product = "unlock1";
    }
    else if (os_type == os_ios)
    {
        product = "ios8t_unlock1";
    }
    if (ds_map_find_value(global.purchaseMap,product) == 0) &amp;&amp; (product != "")
    {
        iap_acquire(product,"");
    }
}
else
{
    if (os_type == os_windows)
    {
        show_message("You're using PC!");
    }
    else
    {
        show_message("The store is currently available! Try again in a few moments!");
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///menu actions
if (action == 1)
{
    room_goto(rm_projects);
}
if (action == 2)
{
    room_goto(rm_onlineloader);
}
if (action == 3)
{
    room_goto(rm_settings);
}

if (action == 4)
{
    url_open("http://guovagames.weebly.com/8toneshelp.html");
    alarm[1] = 8;
}

if (action == 5)
{
    room_goto(rm_about);
}

if (action == 6)
{
    if (os_type == os_winphone)
    {
        url_open("zune:reviewapp?appid=70e8bd4f-28d1-4386-a612-20b6b9535ce5");
    }
    if (os_type == os_android)
    {
        url_open("market://details?id=com.guova.eighttones");
    }
    if (os_type == os_ios)
    {
        url_open("itms-apps://itunes.apple.com/app/1092939048");
    }
    alarm[1] = 8;
}

if (action == 777)
{
    if (os_type == os_winphone)
    {
        url_open("http://www.windowsphone.com/en-US/store/publishers?publisherId=Guova%2BGames");
    }
    if (os_type == os_android)
    {
        url_open("market://search?q=pub:Guova Games");
    }
    if (os_type == os_ios)
    {
        url_open("http://appstore.com/chenganguo");
    }
    alarm[1] = 8;
}

if (action == 7)
{
    game_end();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///activate IAP
if (os_type &lt;&gt; os_windows)
{
    var IAP_publisher = ds_map_create();
    var productList = ds_list_create();
    if (os_type == os_android)
    {
        var product = "unlock1";
    }
    else if (os_type == os_ios)
    {
        var product = "ios8t_unlock1";
    }
    ds_map_add(IAP_publisher,"id",product);
    ds_map_add(IAP_publisher,"title","Publisher");
    ds_map_add(IAP_publisher,"type","Durable");
    ds_map_add(IAP_publisher,"description","This one-time only purchase allows users to publish music to 8Tones server!");
    ds_map_add(IAP_publisher,"price","$0.99");
    ds_list_add(productList,IAP_publisher);
    iap_activate(productList);
    ds_map_destroy(IAP_publisher);
    ds_list_destroy(productList);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///login
alarm[3] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///render title screen
draw_set_font(ft_gb_xxl);
draw_set_halign(fa_center);
draw_set_color(global.accent_color[global.accent]);
draw_set_alpha(alpha2);
draw_text(room_width*0.5,32,"8Tones");
draw_set_color(global.text_white);
draw_set_font(ft_gb_xs);
draw_text(room_width*0.5,64,"A very small 8-bit music#chiptune maker");
draw_set_font(ft_gb_s);
draw_set_alpha(alpha2*0.7);
if (global.username != '')
{
    draw_text(room_width*0.5,4,"Welcome "+global.username+"!");
}
if (global.background == 0)
{
    draw_set_alpha(alpha*0.2);
}
else
{
    draw_set_alpha(alpha*0.3);
}
draw_set_color(global.accent_color[global.accent]);
draw_rectangle(0,96+24,room_width,96+24+((entries+1)*32),0);
var _aa;
for (_aa = 0; _aa &lt;= entries; _aa += 1)
{
    draw_set_color(global.text_white);
    draw_set_alpha(alpha);
    draw_set_font(ft_gb_l);
    draw_text(entry_x[_aa],104+24+(_aa*32),entry[_aa]);
}

if (clicked &lt;&gt; 0) &amp;&amp; (clicked &lt;= entries+1)
{
    draw_set_alpha(0.9);
    draw_set_color(global.accent_color[global.accent]);
    draw_set_font(ft_gb_l);
    draw_text(entry_x[clicked-1],104+24+((clicked-1)*32),entry[clicked-1]);
}
if (global.online == 0)
{
    var C = room_width*0.5;
    if (clicked == 8)
    {
        draw_set_color(global.accent_color[global.accent]);
        draw_set_alpha(alpha*0.5);
        draw_rectangle(C-72,room_height-48,C+72,room_height-24,0);
    }
    draw_set_alpha(1);
    draw_set_color(global.text_white);
    draw_set_font(ft_gb_s);
    draw_set_alpha(alpha);
    draw_rectangle(C-72,room_height-48,C+72,room_height-24,1);
    draw_rectangle(C-71,room_height-47,C+71,room_height-25,1);
    if (os_type == os_ios)
    {
        draw_text(C,room_height-41,"Publisher Mode");
    }
    else
    {
        draw_text(C,room_height-41,"Publisher $0.99");
    }
    
    
    //ios restore button
    if (os_type == os_ios)
    {
        if (clicked == 9)
        {
            draw_set_color(global.accent_color[global.accent]);
            draw_set_alpha(alpha*0.5);
            draw_rectangle(C-72,room_height-56,C+72,room_height-80,0);
        }
        draw_set_alpha(1);
        draw_set_color(global.text_white);
        draw_set_font(ft_gb_s);
        draw_set_alpha(alpha);
        draw_rectangle(C-72,room_height-56,C+72,room_height-80,1);
        draw_rectangle(C-71,room_height-57,C+71,room_height-79,1);
        draw_text(C,room_height-73,"Restore Purchase");
    }
}
draw_set_color(global.text_white);
draw_set_font(ft_gb_xs);
draw_set_alpha(alpha);
draw_text(room_width*0.5,room_height-10,"Guova Games, 2015-2016");
draw_set_alpha(1);
draw_set_halign(fa_left);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///render fader
//if (LOGIN &lt;&gt; 0) || (PAY &lt;&gt; 0)
{
    draw_set_alpha(shade_alpha*0.8);
    draw_set_color($000000);
    draw_rectangle(0,0,room_width,room_height,0)
    draw_set_alpha(1);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Pay windows
if (PAY &lt;&gt; 0)
{
    var _cc = room_height*0.5;
    var _aaa = ((pay_win_height*2)-abs(pay_win))/(pay_win_height*2);
    draw_set_color(global.menu_color);
    draw_set_alpha(_aaa);
    draw_rectangle(0,_cc+(pay_win-pay_win_height),room_width,_cc+(pay_win+pay_win_height),0);
    
    draw_set_color(global.text_white);
    draw_set_font(ft_gb);
    if (os_type == os_ios)
    {
        draw_text(4,(_cc+4)+(pay_win-pay_win_height),"PUBLISHER MODE");
    }
    else
    {
        draw_text(4,(_cc+4)+(pay_win-pay_win_height),"PUBLISHER - $0.99");
    }
    draw_set_font(ft_gb_s);
    draw_set_color(global.text_disabled);
    draw_text(4,(_cc+24)+(pay_win-pay_win_height),"Once you purchase/restore#this feature, you can#publish and share your#music to the world!");
    
    var _bot = _cc+(pay_win+pay_win_height);
    var _mid = room_width*0.75;
    var mou_x = device_mouse_x(0);
    var mou_y = device_mouse_y(0);
    
    draw_set_color(global.text_white);
    draw_set_font(ft_gb);
    //get button
    if (pay_click == 1)
    {
        draw_set_color(global.accent_color[global.accent]);
        draw_set_alpha(_aaa*0.5);
        draw_rectangle(4,_bot-32,_mid-2,_bot-8,0);
        draw_set_color(global.text_white);
        draw_set_alpha(_aaa);
    }
    draw_rectangle(4,_bot-32,_mid-2,_bot-8,1);
    draw_rectangle(5,_bot-31,_mid-3,_bot-9,1);
    draw_set_halign(fa_center);
    if (os_type == os_ios)
    {
        draw_text(4+((_mid-6)*0.5),_bot-27,"Pay and Unlock");
    }
    else
    {
        draw_text(4+((_mid-6)*0.5),_bot-27,"Pay or Restore");
    }
    draw_set_halign(fa_left);
    //cancel button
    if (pay_click == 2)
    {
        draw_set_color(global.accent_color[global.accent]);
        draw_set_alpha(_aaa*0.5);
        draw_rectangle(_mid+2,_bot-32,room_width-4,_bot-8,0);
        draw_set_color(global.text_white);
        draw_set_alpha(_aaa);
    }
    draw_rectangle(_mid+2,_bot-32,room_width-4,_bot-8,1);
    draw_rectangle(_mid+3,_bot-31,room_width-5,_bot-9,1);
    draw_set_halign(fa_center);
    draw_text((_mid+2)+((room_width-_mid-6)*0.5),_bot-27,"X");
    draw_set_halign(fa_left);
    
    if (device_mouse_check_button_pressed(0,mb_left))
    {
        if (mou_x &gt;= 4)
        &amp;&amp; (mou_y &gt;= _bot-32)
        &amp;&amp; (mou_x &lt; _mid)
        &amp;&amp; (mou_y &lt;= _bot-8)
        {
            pay_click = 1;
        }
        if (mou_x &gt;= _mid)
        &amp;&amp; (mou_y &gt;= _bot-32)
        &amp;&amp; (mou_x &lt;= room_width)
        &amp;&amp; (mou_y &lt;= _bot-8)
        {
            pay_click = 2;
        }
    }
    else if (device_mouse_check_button_released(0,mb_left))
    {
        if (mou_x &gt;= 4)
        &amp;&amp; (mou_y &gt;= _bot-32)
        &amp;&amp; (mou_x &lt; _mid)
        &amp;&amp; (mou_y &lt;= _bot-8)
        &amp;&amp; (pay_click == 1)
        {
            ///IAP
            event_user(1);
        }
        if (mou_x &gt;= _mid)
        &amp;&amp; (mou_y &gt;= _bot-32)
        &amp;&amp; (mou_x &lt;= room_width)
        &amp;&amp; (mou_y &lt;= _bot-8)
        &amp;&amp; (pay_click == 2)
        {
            //X
            PAY = 3;
        }
        pay_click = 0;
    }
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///ios fader
if (ios_bg &lt;&gt; 0)
{
    draw_set_color(make_color_hsv(0,0,global.background*255));
    draw_set_alpha(0.7);
    draw_rectangle(-8,-8,room_width+8,room_height+8,0);
    draw_set_alpha(1);
    draw_set_color(global.text_white);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///debug
room_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (canclick == 1) &amp;&amp; (PAY == 0)
{
    canclick = 2;
    action = 7;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
