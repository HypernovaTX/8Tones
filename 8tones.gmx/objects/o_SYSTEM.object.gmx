<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Critical Inir
global.username = '';
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///init IAP
var map_create = 1;
if (file_exists("sys/iap_data.json")) &amp;&amp; (os_type &lt;&gt; os_windows)
{
    global.purchaseMap = ds_map_secure_load("sys/iap_data.json");
    if (ds_exists(global.purchaseMap,ds_type_map))
    {
        if (os_type == os_android)
        {
            var product = "unlock1";
        }
        else if (os_type == os_ios)
        {
            var product = "ios8t_unlock1";
        }
        if ds_map_exists(global.purchaseMap,product)
        {
            map_create = 0;
            if (ds_map_find_value(global.purchaseMap,product) == 0)
            {
                global.online = 0;
            }
            else
            {
                global.online = 1;
            }
        }
    }
}

if (map_create == 1) &amp;&amp; (os_type &lt;&gt; os_windows)
{
    global.purchaseMap = ds_map_create();
    if (os_type == os_android)
    {
        var product = "unlock1";
    }
    else if (os_type == os_ios)
    {
        var product = "ios8t_unlock1";
    }
    ds_map_add(global.purchaseMap,product,0);
    ds_map_secure_save(global.purchaseMap,"sys/iap_data.json");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Rainbow accent color thingy
global.hue += 0.2;
if (global.hue &gt; 255)
{
    global.hue = 0;
}
global.rainbow = make_color_hsv(global.hue,200,230);
global.accent_color[23] = global.rainbow //Rainbow
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///save datas
sns_load();
sns_writevalue('preview',global.preview);
sns_writevalue('accent',global.accent);
sns_writevalue('background',global.background);
sns_writevalue('reverse',global.reverse_PS);
sns_writevalue('online',global.online);
sns_writevalue('username',global.username);
sns_save();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///text colors bases on BG
if (global.background == 1)
{
    background_index[0] = bg_white;
    background_visible[0] = 1;
}
else
{
    background_visible[0] = 0;
}

if (global.background == 0)
{
    global.text_white = $FFFFFF;
    global.text_edit = $AAAAAA;
    global.text_disabled = $888888;
    global.menu_color = $222222;
}

if (global.background == 1)
{
    global.text_white = $202020;
    global.text_edit = $555555;
    global.text_disabled = $999999;
    global.menu_color = $CCCCCC;
}

event_user(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///set background to white if you know it
event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///init global thingy
global.files = 0;
global.samples = 0;
global.font = 0;
global.preview = 0;
global.editor_setting = 0;
global.load_file = "";
global.reverse_PS = 0;
global.online = 0;
global.password = '';
global.page = 0;
global.read_internet_music = '';
global.read_internet_title = '';
global.read_internet_author = '';
global.read_internet_likes = '';
global.read_internet_reallikes = 0;

if !(directory_exists("projects"))
{
    directory_create("projects");
}

if ((os_type == os_android) || (os_type == os_ios)) &amp;&amp; !(file_exists('samples.txt'))
{
    Android_examples_init();
    file_delete("samples.txt");
    var _smp;
    _smp = file_text_open_write("samples.txt");
    file_text_write_string(_smp,'Delete this file if you want the example projects back.');
    file_text_close(_smp);
}

//NO DOUBLE CLICK!!
device_mouse_dbclick_enable(0);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///init accent colors
global.accent = 1; //default - green
global.background = 0; //0 - black(default)/1 - white
global.hue = 0;
global.rainbow = make_color_hsv(global.hue,200,255);

global.accent_color[0] = make_color_rgb(164,196,0); //lime
global.accent_color[1] = make_color_rgb(96,169,23); //green
global.accent_color[2] = make_color_rgb(0,138,0); //emerals
global.accent_color[3] = make_color_rgb(0,171,169); //teal

global.accent_color[4] = make_color_rgb(27,161,226); //cyan
global.accent_color[5] = make_color_rgb(0,80,239); //cobalt
global.accent_color[6] = make_color_rgb(106,0,255); //indigo
global.accent_color[7] = make_color_rgb(170,0,255); //violet

global.accent_color[8] = make_color_rgb(244,114,208); //pink
global.accent_color[9] = make_color_rgb(216,0,115); //magenta
global.accent_color[10] = make_color_rgb(162,0,37); //crimson
global.accent_color[11] = make_color_rgb(229,20,0); //red

global.accent_color[12] = make_color_rgb(250,104,0); //orange
global.accent_color[13] = make_color_rgb(240,163,10); //amber
global.accent_color[14] = make_color_rgb(227,200,0); //yellow
global.accent_color[15] = make_color_rgb(130,90,44); //brown

global.accent_color[16] = make_color_rgb(109,135,100) //olive
global.accent_color[17] = make_color_rgb(100,118,135) //steel
global.accent_color[18] = make_color_rgb(118,96,138) //mauve
global.accent_color[19] = make_color_rgb(135,121,78) //taupe

global.accent_color[20] = make_color_rgb(188,188,188) //Gray
global.accent_color[21] = make_color_rgb(0,0,188) //NES Blue
global.accent_color[22] = make_color_rgb(0,252,252) //NES Cyan
global.accent_color[23] = global.rainbow //Rainbow

//text colors bases on BG
if (global.background == 0)
{
    global.text_white = $FFFFFF;
    global.text_edit = $AAAAAA;
    global.text_disabled = $888888;
    global.menu_color = $222222;
}

if (global.background == 0)
{
    global.text_white = $333333;
    global.text_edit = $666666;
    global.text_disabled = $999999;
    global.menu_color = $CCCCCC;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///init saved datas
if !(file_exists('SYSTEM.gv'))
{
    sns_load();
    sns_writevalue('preview',0);
    sns_writevalue('accent',1);
    sns_writevalue('background',0);
    sns_writevalue('reverse',0);
    sns_writevalue('online',0);
    sns_writevalue('username',0);
    sns_save();
}
else
{
    sns_load();
    global.preview = sns_readvalue('preview');
    global.accent = sns_readvalue('accent');
    global.background = sns_readvalue('background');
    if (is_undefined(sns_readvalue('reverse')))
    {
        sns_writevalue('reverse',0);
        global.reverse = 0;
    }
    else
    {
        global.reverse_PS = sns_readvalue('reverse');
    }
    if (is_undefined(sns_readvalue('online')))
    {
        sns_writevalue('online',0);
        global.online = 0;
    }
    else
    {
        global.online = sns_readvalue('online');
        if (is_undefined(global.online))
        {
            global.online = 0;
        }
    }
    if (is_undefined(sns_readvalue('username')))
    {
        sns_writevalue('username',0);
        global.username = '';
    }
    else
    {
        global.username = sns_readvalue('username');
    }
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///init liked ids
global.like_map = ds_map_create();
if !(file_exists('sys/internal8tsys'))
{
    var new_f;
    new_f = file_text_open_write('sys/internal8tsys');
    file_text_write_string(new_f,ds_map_write(global.like_map));
    file_text_close(new_f);
}
else
{
    var _read;
    _read = file_text_open_read('sys/internal8tsys');
    ds_map_read(global.like_map,file_text_read_string(_read));
    file_text_close(_read);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///init GooglePlay
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
